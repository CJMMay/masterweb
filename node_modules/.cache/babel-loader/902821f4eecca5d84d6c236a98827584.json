{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\test\\\\project\\\\src\\\\component\\\\login.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Layout, Menu, Select, Form, Icon, Input, Button, Checkbox } from 'antd';\nimport Msg from './msg.js';\nimport 'antd/dist/antd.css';\nimport \"./login.css\";\nimport axios from 'axios';\nconst Option = Select.Option;\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          let usr = values.userName,\n              pwd = values.password,\n              data = {\n            params: {\n              usr: usr,\n              pwd: pwd\n            }\n          };\n          console.log(data);\n          axios.post('http://47.106.122.35:9900/login', data).then(r => {\n            console.log(r.data);\n\n            if (r.data.code === 1 && values.remember === true) {\n              axios.defaults.headers.common.authorization = r.data.token;\n            }\n\n            this.setState({\n              msg: r.data.message,\n              show: true,\n              isLogin: r.data.code\n            });\n          });\n        }\n      });\n    };\n\n    this.state = {\n      logo: {\n        name: \"123\"\n      },\n      show: false,\n      isLogin: 0,\n      msg: null\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem('user-token')) {\n      axios.defaults.headers.common.authorization = localStorage.getItem('user-token');\n      this.setState({\n        isLogin: 1\n      });\n    }\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    let isLogin = this.state.isLogin,\n        msg = this.state.msg,\n        show = this.state.show;\n    if (isLogin === 1) return React.createElement(Redirect, {\n      push: true,\n      to: \"/Home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      className: \"login-g\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Msg, {\n      msg: msg,\n      show: show,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"login-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login-logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"\",\n      alt: \"\",\n      className: \"logo-pic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      className: \"login-form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, getFieldDecorator('userName', {\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }),\n      placeholder: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      className: \"login-form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: 'Please input your Password!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, getFieldDecorator('remember', {\n      valuePropName: 'checked',\n      initialValue: false\n    })(React.createElement(Checkbox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Remember me\")), React.createElement(\"a\", {\n      className: \"login-form-forgot\",\n      href: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Forgot password\"), React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Log in\"), \"Or \", React.createElement(\"a\", {\n      href: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"register now!\")))));\n  }\n\n}\n\nexport default Form.create()(Login);","map":{"version":3,"sources":["C:\\Users\\admin\\Desktop\\test\\project\\src\\component\\login.js"],"names":["React","Component","Redirect","Layout","Menu","Select","Form","Icon","Input","Button","Checkbox","Msg","axios","Option","Login","constructor","props","handleSubmit","e","preventDefault","form","validateFields","err","values","usr","userName","pwd","password","data","params","console","log","post","then","r","code","remember","defaults","headers","common","authorization","token","setState","msg","message","show","isLogin","state","logo","name","componentDidMount","localStorage","getItem","render","getFieldDecorator","rules","required","color","valuePropName","initialValue","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Layout, Menu, Select, Form, Icon, Input, Button, Checkbox } from 'antd';\r\nimport Msg from './msg.js'\r\nimport 'antd/dist/antd.css';\r\nimport \"./login.css\";\r\nimport axios from 'axios'\r\nconst { Option } = Select;\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      logo: { name: \"123\" },\r\n      show: false,\r\n      isLogin: 0,\r\n      msg: null\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    if (localStorage.getItem('user-token')) {\r\n      axios.defaults.headers.common.authorization = localStorage.getItem('user-token');\r\n      this.setState({ isLogin: 1 });\r\n    }\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n        if (!err) {\r\n            let usr = values.userName, pwd = values.password, data = { params: { usr: usr, pwd: pwd } }\r\n            console.log(data)\r\n            axios.post('http://47.106.122.35:9900/login', data).then((r) => {\r\n              console.log(r.data);\r\n                if (r.data.code === 1&&values.remember===true) {\r\n                    axios.defaults.headers.common.authorization = r.data.token;\r\n                }\r\n      \r\n                this.setState({ msg: r.data.message, show: true, isLogin: r.data.code});\r\n            });\r\n        }\r\n    });\r\n}\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    let isLogin = this.state.isLogin, msg = this.state.msg, show = this.state.show;\r\n    if (isLogin === 1)\r\n      return <Redirect push to='/Home' />;\r\n    return (\r\n      <div className='login-g'>\r\n        <Msg msg={msg} show={show} />\r\n        <div className='login-body'>\r\n          <div className=\"login-logo\">\r\n            <img src=\"\" alt=\"\" className='logo-pic' />\r\n          </div>\r\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n            <Form.Item className=\"login-form-row\">\r\n              {getFieldDecorator('userName', {\r\n                rules: [{ required: true, message: 'Please input your username!' }]\r\n              })\r\n                (<Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  placeholder=\"Username\"\r\n                />)}\r\n            </Form.Item >\r\n            <Form.Item className=\"login-form-row\">\r\n              {\r\n                getFieldDecorator('password', {\r\n                  rules: [{ required: true, message: 'Please input your Password!' }],\r\n                })\r\n                  (\r\n                    <Input\r\n                      prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                    />\r\n                  )\r\n              }\r\n\r\n            </Form.Item>\r\n            <Form.Item>\r\n              {\r\n                getFieldDecorator('remember', {\r\n                  valuePropName: 'checked',\r\n                  initialValue: false,\r\n                })(<Checkbox>Remember me</Checkbox>)\r\n              }\r\n              <a className=\"login-form-forgot\" href=\"\">\r\n                Forgot password\r\n                </a>\r\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                Log in\r\n                </Button>\r\n              Or <a href=\"\">register now!</a>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Form.create()(Login);"]},"metadata":{},"sourceType":"module"}